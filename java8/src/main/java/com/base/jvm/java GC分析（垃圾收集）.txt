java GC分析（垃圾收集）
	通过GC收集器回收不存活的对象，保证jvm更加高效运转
	取GC日志 
		1.命令动态查看 
			jstat -gc 
				jstat -gc 1262 统计回收堆
				jstat -gc 1262 2000 20 设置间隔固定时间打印
					每隔2000ms输出1262的gc情况，一共输出20次
				
		2.容器中设置相关参数打印GC日志
			GC参数
				-XX:+PrintGC 输出GC日志
				-XX:+PrintGCDetails 输出GC的详细日志
				-XX:+PrintGCTimeStamps 输出GC的时间戳（以基准时间的形式）
				-XX:+PrintGCDateStamps 输出GC的时间戳（以日期的形式，如 
					2017-09-04T21:53:59.234+0800）
				-XX:+PrintHeapAtGC 在进行GC的前后打印出堆的信息
				-Xloggc:../logs/gc.log 日志文件的输出路径
			
		tomcat 示例
			JAVA_OPTS="-server -Xms2000m -Xmx2000m -Xmn800m -XX:PermSize=64m -XX:MaxPermSize=256m 
			-XX:SurvivorRatio=4
			-verbose:gc -Xloggc:$CATALINA_HOME/logs/gc.log 
			-Djava.awt.headless=true 
			-XX:+PrintGCTimeStamps -XX:+PrintGCDetails 
			-Dsun.rmi.dgc.server.gcInterval=600000 -Dsun.rmi.dgc.client.gcInterval=600000
			-XX:+UseConcMarkSweepGC -XX:MaxTenuringThreshold=15"
			SurvivorRatio ：为新生代Eden区
			Survivor：救助空间 默认8
				去掉救助空间想法是让大部分不能马上回收的数据尽快进入老年代
	分析日志
		收集器
			查看年轻代PSYoungGen、老年代ParOldGen 内存变化
			full gc 对整个堆内存进行回城，耗时长，因此一般尽
				量减少full gc的次数
			young gc 主要是针对年轻代进行内存回收比较频繁，耗时短
			