策略模式
    定义一系列算法，将每一个算法封装起来，并让它们可以想互替换.
       策略模式让算法独立于 使用它的客户而变化，也称政策模式
    角色
        环境类（context）
        抽象策略类（strategy）
        具体策略类（concreteStrategy）
    应用场景
        通常解决一个问题有多个方案时，最简单是用 if-else or switch-case
        如果解决方案中包括大量的逻辑需要封装或者处理方式变动较大的时候则显得混乱、复杂
        让操作者根据具体需求动态的选择不同的策略方案
    分析
        策略模式是对算法的封装,它把算法的责任和算法本身分割开，委派给不同对象管理
        策略模式通常把一个系列的算法封装到一系列的策略类，作为一个抽象策略类的子类
    优点
        提供了对 开闭原则 的完美支持
        用户可以在不修改原有系统的基础上选择算法或行为，也可以灵活的增加新算法或行为
        提供了管理相关算法族的办法
        提供了可以替换继承关系的办法
        可以避免使用多重条件转移语句
    缺点
        客户端必须知道所有策略类，再决定使用哪一个类
        将造成产生很多策略类
