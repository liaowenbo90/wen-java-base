kafka
	基本概述
		topics(主题)，消息流保存在主题中
		partition(分区)，每个主题有任意个分区
		brokers(经纪人)，代理负责维护发布数据的简单系统、
		kafka Cluster 集群
		producers(生产者) 发送一个或多个brokers发消息
		consumers(消费者) 从经纪人处读取数据
		leader(领导者) 负责给定分区的所有读取和写入节点，
		follower(追随者) ，leader失败，一个追随者成为正常消费者，拉取消息并更新自已的数据
		
		kafka代理是无状态的，用zookeeper来维护它们的集群状态
			zookeeper主要用来通知生产者和消费者，kafka中存在的新代理和失败的代理
	工作流程
		kafka是一个或多个分区的集合，分区是消息有线性有序序列，消息由它们的索引来标识，传入消息由分区未尾来标识
			消费消息按顺序读取，通过复制到不同的代理提供持久性
		发布-订阅
			消费者订阅特定的主题，kafka将提供当前主题索引（偏移）
			一旦kafka收到生产者消息，将转发给消费者
			消费者处理后将会向kafka代理发送确认
			kafka收到确认后将索引更新为新值，并在zookeeper中更新维护
		队列消息
			订阅具有相同 分组id 的题单个组
			生产者以固定间隔向某个主题发送信息
			单个消费者订阅特定主题
		zookeeper 是一个分布式配置和同步服务，kafka之间的代理也通过zookeeper来完成
	安装
		先安装 zookeeper
			wget http：//archive.apache.org/dist/kafka/0.9.0.0/kafka_2.11-0.9.0.0.tgz
		启动服务器
			zookeeper
			bin/zookeeper-server-start.sh config/zookeeper.properties
			kafka 
			$ bin/kafka-server-start.sh config/server.properties
			第一步下载
			http://kafka.apache.org/quickstart

			第二步解压安装
			> tar -xzf kafka_2.11-1.1.0.tgz
			> cd kafka_2.11-1.1.0

			第三步启动服务
			> bin/zookeeper-server-start.sh config/zookeeper.properties

			> bin/kafka-server-start.sh config/server.properties

			第四步创建topic
			> bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test

			第五步发送消息
			> bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test
			This is a message
			This is another message

			第六步接收消息
			> bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning
			This is a message
			This is another message

			
		
		