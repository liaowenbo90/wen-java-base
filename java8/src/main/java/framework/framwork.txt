提升网站性能，可用性及并发
	1提高硬件设备能力
	2使用缓存 本地可使用 map 分布式 redis memcache
	3使用消息队列  解耦+削锋+异步
	4采用分布式 不同的服务部署在不同的服务器上
	5数据库分布 读写分离 ，分表（水平分表、垂直分表）
	6采用集群  多台机器采用相同的服务
	7CDN加速
	8浏览器缓存
	9使用合适的连接池  数据连接池，线程池
	10适当使用多线程开发
	
设计高可用系统
	1.降级 当服务器压力过高的时候，减掉某些模块， 目地：服务有损但总比没有好
	2.限流 防止流量超过锋值 
	3.缓存 避免大量服务直接落到数据库
	4.超时机制 避免请求过多造成雪崩
	5.回滚机制

大表常见的优化手段
	限定数据范围
	读写分离
	垂直分区 ：简单来说垂直拆分是指数据表列的拆分，把一张列比较多的表拆分为多张表
	水平分区： 保持数据表结构不变，通过某种策略存储数据分片。这样每一片数据分散到不同的表或者库中，达到了分布式的目的
CAP
	一致性：所有节点访问同一份最新的数据副本
	可用性：每次请求都能获取到非错的响应
	分区容错性：遇到某个节点故障时，仍然能对外提供一致性、可用性
	