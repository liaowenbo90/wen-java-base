享元模式
    定义：运用共享技术,有效支持大量细粒度对象复用
        如果一个系统中有多个相同对象，那么只共一份就够了，不必每个都去实例化对象
    角色：
        抽象享元类（flyweight）:通常是一个接口，在抽象享元类中声明了具体享元类公共的方法，这些方法可以向外界提供享元对象的内部数据，也可以设置外部数据
        具体享元类（concreteFlyweight）:它实现了抽象享元类，其实例称为享元对象，为内部状态提供了存储空间
        非共享具体享元类（unsharedConcreteFlyweight）:并不是所有抽象享元类的子类都需要被共享，不被共享的可设计为非共享元类
        享元工厂类（flyweightFactory）:用于创建并管理享元对象
    应用场景：
        本来的对象占用内存比较大
        数量非常多
        每个对象非常相似，才可以分离出享元
        一个程序使用了大量的对象，造成很大的存储开销
        对象的大多数状态可以是外部状态
    优点：
        能大幅度降低内存中对象的数量
    缺点：
        使系统逻辑复杂化，影响系统速度

