访问模式
    定义：封装某些作用于某种数据结构中各元素的操作，它可以在不改变数据结构的前提下定义作用这些元素的新的操作
    角色：
        抽象访问者：抽象类或者接口，声明访问者可以访问哪些元素，具体到程序中就是visit方法中的参数哪些可以访问
        访问者：实现抽象访问所声明的方法，它影响到访问者访问到一个类后该干什么
        抽象元素类：接口或者抽象类，声明接受哪一类访问者访问，程序上通过accept方法中的参数来定义。抽象元素一般
                    有两类方法，一部分是本身业务逻辑，另外就是允许接收哪类访问者访问
        元素类：实现抽象元素类所声明的accept方法，通常都是visitor.visit(this),基本上已形成一种定式
        结构对象：一个元素的容器，一般包含一个容纳多个不同类，不同接口的容器，如list/set/map,在项目中一般很少抽角这个角色
    优点：
        符合单一原则：凡是适用访问者模式的场景中，元素类中需要封装的访问者中操作必定与元素本身关系不大且是易变操作
        扩展性良好：元素类可以通过接受不同的访问者来实现对不同操作的扩展
    适用场景：
        假如一个对象中存在着一些与本对象不相干的操作，为了辟免操作污染这个对象，则可以使用访问者模式来把这些操作封装到访问者中去
        假如一组对象中，存在着相似的操作，为辟免出现大量重复代码，可以将重复代码封装到访问类中去
