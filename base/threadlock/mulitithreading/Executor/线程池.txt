线程池
    优点：
        降低资源消耗
        提高响应速度
        提高线程的可管理性
    executor结构
        任务
            实现Runnable接口和Callable接口
        任务的执行
            执行任务机制的核心接口executor
    创建线程池
        1、构造 ThreadPoolExecutor()
        2、executors.
            FixedThredPool :可重用固定线程池
            SingThredPool：单个worker工作线程池
            CachedThredPool：根据需要创建线程池
    ScheduledThredPoolExecutor
        定期执行任务

各种线程池的适用场景介绍
    FixedThreadPool： 适用于为了满足资源管理需求，而需要限制当前线程数量的应用场景。它适用于负载比较重的服务器；
    SingleThreadExecutor： 适用于需要保证顺序地执行各个任务并且在任意时间点，不会有多个线程是活动的应用场景。
    CachedThreadPool： 适用于执行很多的短期异步任务的小程序，或者是负载较轻的服务器；
    ScheduledThreadPoolExecutor： 适用于需要多个后台执行周期任务，同时为了满足资源管理需求而需要限制后台线程的数量的应用场景，
    SingleThreadScheduledExecutor： 适用于需要单个后台线程执行周期任务，同时保证顺序地执行各个任务的应用场景。
